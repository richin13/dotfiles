snippet context
	import React from 'react';

	interface ProviderProps {
	  children?: React.ReactNode
	}

	interface ContextValue {
	  // TODO: add context value
	}

	const $0Context = React.createContext<ContextValue | null>(null)

	export const $0Provider = (props: ProviderProps) => {
	  // Build what will go in the context
	  const value = React.useMemo(
	    () => ({ /* context fields */ }),
	    [/* context fields */],
	  )
	  return <$0Context.Provider value={value} {...props} />
	}

	function use$0(): ContextValue {
	  const value = React.useContext($0Context)

	  if (value == null) {
	    throw new Error(
	      'Hook use$0 can only be used within a $0Provider',
	    )
	  }
	  const { /* context fields */ } = value

	  return React.useMemo(
	    () => ({ /* context fields */ }),
	    [/* context fields */],
	  )
	}

	export default use$0

snippet comment
	{/*
		${1:$TM_SELECTED_TEXT}
	*/}
