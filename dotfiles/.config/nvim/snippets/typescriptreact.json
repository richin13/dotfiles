{
  "React Context": {
    "prefix": "context",
    "description": "Create a React context",
    "body": [
      "import React from 'react';",
      "",
      "interface ProviderProps {",
      "  children?: React.ReactNode",
      "}",
      "",
      "interface ContextValue {",
      "  // TODO: add context value fields",
      "}",
      "",
      "const $1Context = React.createContext<ContextValue | null>(null)",
      "",
      "export const $1Provider = (props: ProviderProps) => {",
      "  // Build what will go in the context value here",
      "  const value = React.useMemo(",
      "    () => ({ /* context fields */ }),",
      "    [/* context fields */],",
      "  )",
      "",
      "  return <$1Context.Provider value={value} {...props} />",
      "}",
      "",
      "function use$1(): ContextValue {",
      "  const value = React.useContext($1Context)",
      "",
      "  if (value == null) {",
      "    throw new Error(",
      "      'Hook use$1 can only be used within a $1Provider',",
      "    )",
      "  }",
      "",
      "  const { /* context fields */ } = value",
      "",
      "  return React.useMemo(",
      "    () => ({ /* context fields */ }),",
      "    [/* context fields */],",
      "  )",
      "}",
      "",
      "export default use$1"
    ]
  }
}
